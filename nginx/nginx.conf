# Docker's internal DNS (127.0.0.11) with no caching
resolver 127.0.0.11 valid=30s;

upstream backend {
    zone backend_dynamic 64k;

    least_conn;

    server backend-w1:3000 resolve;
    server backend-w2:3000 resolve;
    server backend-w3:3000 resolve;
    server backend-w4:3000 resolve;
}

server {
    listen 8080;
    server_name localhost;

    # Backend API routing
    location /api/ {
        #Old routing
        ## Strip /api prefix and resolve dynamically
        #set $backend_upstream "http://backend:3000";
        #rewrite ^/api/(.*) /$1 break;  # Critical path rewriting
        #proxy_pass $backend_upstream;
        
        #New routing (load-balance)
        rewrite ^/api/(.*) /$1 break;  # Critical path rewriting
        proxy_pass http://backend;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Frontend routing
    location / {
        # Use variable to force DNS re-resolution
        set $frontend_upstream "http://frontend:3000";
        proxy_pass $frontend_upstream;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Required for React Router
        #try_files $uri $uri/ /index.html;
    }
}
